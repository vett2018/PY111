type: edu
files:
- name: task.py
  visible: true
  placeholders:
  - offset: 78
    length: 3
    placeholder_text: '...'
    initial_state:
      length: 3
      offset: 78
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      if num_rows == 0:
              return []
          triangle = [[1]]
          for i in range(1, num_rows):
              row = [1]
              for j in range(1, i):
                  row.append(triangle[i - 1][j - 1] + triangle[i - 1][j])
              row.append(1)
              triangle.append(row)
          return triangle
  text: |
    from typing import List


    def generate(num_rows: int) -> List[List[int]]:
        ...
  learner_created: false
- name: tests/test_task.py
  visible: false
  text: |+
    import unittest

    from task import generate


    class TestSolution(unittest.TestCase):
        def test_generate(self):
            self.assertEqual(generate(0), [])
            self.assertEqual(generate(1), [[1]])
            self.assertEqual(generate(5), [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]])

  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
- name: img_2.png
  visible: true
  learner_created: false
status: Unchecked
record: -1
