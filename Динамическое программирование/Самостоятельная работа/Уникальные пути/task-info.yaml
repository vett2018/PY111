type: edu
files:
- name: task.py
  visible: true
  placeholders:
  - offset: 45
    length: 3
    placeholder_text: '...'
    initial_state:
      length: 3
      offset: 45
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      dp = [[0] * n for _ in range(m)]
          for i in range(m):
              dp[i][0] = 1
          for j in range(n):
              dp[0][j] = 1
          for i in range(1, m):
              for j in range(1, n):
                  dp[i][j] = dp[i - 1][j] + dp[i][j - 1]
          return dp[m - 1][n - 1]
  text: |+
    def unique_paths(m: int, n: int) -> int:
        ...

  learner_created: false
- name: tests/test_task.py
  visible: false
  text: |
    import unittest

    from task import unique_paths


    class TestUniquePaths(unittest.TestCase):
        def test_unique_paths(self):
            self.assertEqual(unique_paths(3, 2), 3)
            self.assertEqual(unique_paths(7, 3), 28)
            self.assertEqual(unique_paths(23, 12), 193536720)
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
- name: img.png
  visible: true
  learner_created: false
status: Unchecked
record: -1
