type: edu
files:
- name: task.py
  visible: true
  placeholders:
  - offset: 72
    length: 3
    placeholder_text: '...'
    initial_state:
      length: 3
      offset: 72
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      left, right = 0, len(s) - 1
          while left < right:
              s[left], s[right] = s[right], s[left]
              left, right = left + 1, right - 1
  text: |
    from typing import List


    def reverse_string(s: List[str]) -> None:
        ...
  learner_created: false
- name: tests/test_task.py
  visible: false
  text: |
    import unittest

    from task import reverse_string


    class TestReverseString(unittest.TestCase):
        def test_case_1(self):
            input = ["h","e","l","l","o"]
            expected_output = ["o","l","l","e","h"]
            reverse_string(input)
            self.assertEqual(input, expected_output)

        def test_case_2(self):
            input = ["H","a","n","n","a","h"]
            expected_output = ["h","a","n","n","a","H"]
            reverse_string(input)
            self.assertEqual(input, expected_output)

        def test_case_3(self):
            input = []
            expected_output = []
            reverse_string(input)
            self.assertEqual(input, expected_output)
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
status: Unchecked
record: -1
