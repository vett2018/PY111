type: edu
files:
- name: task.py
  visible: true
  placeholders:
  - offset: 97
    length: 3
    placeholder_text: '...'
    initial_state:
      length: 3
      offset: 97
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      set1 = set(nums1)
          set2 = set(nums2)
          return list(set1 & set2)
  text: |
    from typing import List


    def intersection(nums1: List[int], nums2: List[int]) -> List[int]:
        ...
  learner_created: false
- name: tests/test_task.py
  visible: false
  text: |
    import unittest

    from task import intersection


    class TestIntersection(unittest.TestCase):
        def test_intersection(self):
            nums1 = [1, 2, 2, 1]
            nums2 = [2, 2]
            result = intersection(nums1, nums2)
            self.assertEqual(result, [2])

            nums1 = [4, 9, 5]
            nums2 = [9, 4, 9, 8, 4]
            result = intersection(nums1, nums2)
            self.assertIn(result, [[9, 4], [4, 9]])

            nums1 = []
            nums2 = []
            result = intersection(nums1, nums2)
            self.assertEqual(result, [])
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
status: Unchecked
record: -1
