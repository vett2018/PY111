type: edu
files:
- name: task.py
  visible: true
  placeholders:
  - offset: 152
    length: 3
    placeholder_text: '...'
    initial_state:
      length: 3
      offset: 152
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      low, mid, high = 0, 0, len(nums) - 1
          while mid <= high:
              if nums[mid] == 0:
                  nums[low], nums[mid] = nums[mid], nums[low]
                  low += 1
                  mid += 1
              elif nums[mid] == 1:
                  mid += 1
              else:
                  nums[mid], nums[high] = nums[high], nums[mid]
                  high -= 1
  text: |
    from typing import List


    def sort_сolors(nums: List[int]) -> None:
        """
        Ничего не возвращайте, вместо этого измените nums на месте.
        """
        ...
  learner_created: false
- name: tests/test_task.py
  visible: false
  text: |
    import unittest

    from task import sort_сolors


    class TestSortColors(unittest.TestCase):
        def test_sortColors(self):
            nums = [2, 0, 2, 1, 1, 0]
            sort_сolors(nums)
            self.assertEqual(nums, [0, 0, 1, 1, 2, 2])

            nums = [1, 2, 0]
            sort_сolors(nums)
            self.assertEqual(nums, [0, 1, 2])

            nums = [2, 2, 2, 1, 1, 0, 0, 0]
            sort_сolors(nums)
            self.assertEqual(nums, [0, 0, 0, 1, 1, 2, 2, 2])
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
status: Unchecked
record: -1
